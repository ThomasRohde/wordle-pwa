// Word list for the game - a small sample for demo purposes
export const WORD_LIST = [
    "ALBUM",
    "HINGE",
    "MONEY",
    "SCRAP",
    "GAMER",
    "GLASS",
    "SCOUR",
    "BEING",
    "DELVE",
    "YIELD",
    "METAL",
    "TIPSY",
    "SLUNG",
    "FARCE",
    "GECKO",
    "SHINE",
    "CANNY",
    "MIDST",
    "BADGE",
    "HOMER",
    "TRAIN",
    "STORY",
    "HAIRY",
    "FORGO",
    "LARVA",
    "TRASH",
    "ZESTY",
    "SHOWN",
    "HEIST",
    "ASKEW",
    "INERT",
    "OLIVE",
    "PLANT",
    "OXIDE",
    "CARGO",
    "FOYER",
    "FLAIR",
    "AMPLE",
    "CHEEK",
    "SHAME",
    "MINCE",
    "CHUNK",
    "ROYAL",
    "SQUAD",
    "BLACK",
    "STAIR",
    "SCARE",
    "FORAY",
    "COMMA",
    "NATAL",
    "SHAWL",
    "FEWER",
    "TROPE",
    "SNOUT",
    "LOWLY",
    "STOVE",
    "SHALL",
    "FOUND",
    "NYMPH",
    "EPOXY",
    "DEPOT",
    "CHEST",
    "PURGE",
    "SLOSH",
    "THEIR",
    "RENEW",
    "ALLOW",
    "SAUTE",
    "MOVIE",
    "CATER",
    "TEASE",
    "SMELT",
    "FOCUS",
    "TODAY",
    "WATCH",
    "LAPSE",
    "MONTH",
    "SWEET",
    "HOARD",
    "CLOTH",
    "BRINE",
    "AHEAD",
    "MOURN",
    "NASTY",
    "RUPEE",
    "CHOKE",
    "CHANT",
    "SPILL",
    "VIVID",
    "BLOKE",
    "TROVE",
    "THORN",
    "OTHER",
    "TACIT",
    "SWILL",
    "DODGE",
    "SHAKE",
    "CAULK",
    "AROMA",
    "CYNIC",
    "ROBIN",
    "ULTRA",
    "ULCER",
    "PAUSE",
    "HUMOR",
    "FRAME",
    "ELDER",
    "SKILL",
    "ALOFT",
    "PLEAT",
    "SHARD",
    "MOIST",
    "THOSE",
    "LIGHT",
    "WRUNG",
    "COULD",
    "PERKY",
    "MOUNT",
    "WHACK",
    "SUGAR",
    "KNOLL",
    "CRIMP",
    "WINCE",
    "PRICK",
    "ROBOT",
    "POINT",
    "PROXY",
    "SHIRE",
    "SOLAR",
    "PANIC",
    "TANGY",
    "ABBEY",
    "FAVOR",
    "DRINK",
    "QUERY",
    "GORGE",
    "CRANK",
    "SLUMP",
    "BANAL",
    "TIGER",
    "SIEGE",
    "TRUSS",
    "BOOST",
    "REBUS",
    "UNIFY",
    "TROLL",
    "TAPIR",
    "ASIDE",
    "FERRY",
    "ACUTE",
    "PICKY",
    "WEARY",
    "GRIPE",
    "CRAZE",
    "PLUCK",
    "BRAKE",
    "BATON",
    "CHAMP",
    "PEACH",
    "USING",
    "TRACE",
    "VITAL",
    "SONIC",
    "MASSE",
    "CONIC",
    "VIRAL",
    "RHINO",
    "BREAK",
    "TRIAD",
    "EPOCH",
    "USHER",
    "EXULT",
    "GRIME",
    "CHEAT",
    "SOLVE",
    "BRING",
    "PROVE",
    "STORE",
    "TILDE",
    "CLOCK",
    "WROTE",
    "RETCH",
    "PERCH",
    "ROUGE",
    "RADIO",
    "SURER",
    "FINER",
    "VODKA",
    "HERON",
    "CHILL",
    "GAUDY",
    "PITHY",
    "SMART",
    "BADLY",
    "ROGUE",
    "GROUP",
    "FIXER",
    "GROIN",
    "DUCHY",
    "COAST",
    "BLURT",
    "PULPY",
    "ALTAR",
    "GREAT",
    "BRIAR",
    "CLICK",
    "GOUGE",
    "WORLD",
    "ERODE",
    "BOOZY",
    "DOZEN",
    "FLING",
    "GROWL",
    "ABYSS",
    "STEED",
    "ENEMA",
    "JAUNT",
    "COMET",
    "TWEED",
    "PILOT",
    "DUTCH",
    "BELCH",
    "OUGHT",
    "DOWRY",
    "THUMB",
    "HYPER",
    "HATCH",
    "ALONE",
    "MOTOR",
    "ABACK",
    "GUILD",
    "KEBAB",
    "SPEND",
    "FJORD",
    "ESSAY",
    "SPRAY",
    "SPICY",
    "AGATE",
    "SALAD",
    "BASIC",
    "MOULT",
    "CORNY",
    "FORGE",
    "CIVIC",
    "ISLET",
    "LABOR",
    "GAMMA",
    "LYING",
    "AUDIT",
    "ROUND",
    "LOOPY",
    "LUSTY",
    "GOLEM",
    "GONER",
    "GREET",
    "START",
    "LAPEL",
    "BIOME",
    "PARRY",
    "SHRUB",
    "FRONT",
    "WOOER",
    "TOTEM",
    "FLICK",
    "DELTA",
    "BLEED",
    "ARGUE",
    "SWIRL",
    "ERROR",
    "AGREE",
    "OFFAL",
    "FLUME",
    "CRASS",
    "PANEL",
    "STOUT",
    "BRIBE",
    "DRAIN",
    "YEARN",
    "PRINT",
    "SEEDY",
    "IVORY",
    "BELLY",
    "STAND",
    "FIRST",
    "FORTH",
    "BOOBY",
    "FLESH",
    "UNMET",
    "LINEN",
    "MAXIM",
    "POUND",
    "MIMIC",
    "SPIKE",
    "CLUCK",
    "CRATE",
    "DIGIT",
    "REPAY",
    "SOWER",
    "CRAZY",
    "ADOBE",
    "OUTDO",
    "TRAWL",
    "WHELP",
    "UNFED",
    "PAPER",
    "STAFF",
    "CROAK",
    "HELIX",
    "FLOSS",
    "PRIDE",
    "BATTY",
    "REACT",
    "MARRY",
    "ABASE",
    "COLON",
    "STOOL",
    "CRUST",
    "FRESH",
    "DEATH",
    "MAJOR",
    "FEIGN",
    "ABATE",
    "BENCH",
    "QUIET",
    "GRADE",
    "STINK",
    "KARMA",
    "MODEL",
    "DWARF",
    "HEATH",
    "SERVE",
    "NAVAL",
    "EVADE",
    "FOCAL",
    "BLUSH",
    "AWAKE",
    "HUMPH",
    "SISSY",
    "REBUT",
    "CIGAR",
];

export const getRandomWord = (): string => {
    return WORD_LIST[Math.floor(Math.random() * WORD_LIST.length)];
};

export const isValidWord = (word: string): boolean => {
    return WORD_LIST.includes(word.toUpperCase());
};

export const checkGuess = (guess: string, target: string): ("correct" | "present" | "absent")[] => {
    const result: ("correct" | "present" | "absent")[] = new Array(5).fill("absent");
    const targetLetters = target.split("");
    const guessLetters = guess.split("");

    // First pass: mark correct letters
    for (let i = 0; i < 5; i++) {
        if (guessLetters[i] === targetLetters[i]) {
            result[i] = "correct";
            targetLetters[i] = "*"; // Mark as used
            guessLetters[i] = "*"; // Mark as used
        }
    }

    // Second pass: mark present letters
    for (let i = 0; i < 5; i++) {
        if (guessLetters[i] !== "*") {
            const targetIndex = targetLetters.indexOf(guessLetters[i]);
            if (targetIndex !== -1) {
                result[i] = "present";
                targetLetters[targetIndex] = "*"; // Mark as used
            }
        }
    }

    return result;
};

export const getTodaysWord = (): string => {
    // Generate a consistent word for today based on date
    const today = new Date();
    const daysSinceEpoch = Math.floor(today.getTime() / (1000 * 60 * 60 * 24));
    const wordIndex = daysSinceEpoch % WORD_LIST.length;
    return WORD_LIST[wordIndex];
};

export const formatDate = (date: Date): string => {
    return date.toISOString().split("T")[0];
};

export const isNewDay = (lastPlayed: string): boolean => {
    const today = formatDate(new Date());
    return lastPlayed !== today;
};

export const getShareText = (guesses: string[], targetWord: string, gameNumber: number): string => {
    const result = guesses
        .map((guess) => {
            if (!guess) return "";
            return checkGuess(guess, targetWord)
                .map((state) => {
                    switch (state) {
                        case "correct":
                            return "ðŸŸ©";
                        case "present":
                            return "ðŸŸ¨";
                        case "absent":
                            return "â¬›";
                        default:
                            return "â¬œ";
                    }
                })
                .join("");
        })
        .filter((line) => line)
        .join("\n");

    return `Wordle PWA #${gameNumber}\n\n${result}\n\nPlay at: ${window.location.origin}`;
};
